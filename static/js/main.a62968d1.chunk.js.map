{"version":3,"sources":["components/TodoItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/TodoContainer.js","index.js","components/TodoItem.module.css"],"names":["TodoItem","props","useState","editing","setEditing","useEffect","console","log","todo","handleChangeProps","deleteTodoProps","setUpdate","title","completed","id","viewMode","editMode","display","className","styles","item","onDoubleClick","current","style","type","checkbox","checked","onChange","onClick","color","fontSize","fontStyle","opacity","textDecoration","textInput","value","e","target","onKeyDown","key","TodosList","todos","map","Header","padding","lineHeight","fontWeight","marginBottom","textTransform","textAlign","InputTodo","inputText","setInputText","onSubmit","preventDefault","trim","addTodoProps","alert","placeholder","name","TodoContainer","handleChange","setState","prevState","delTodo","prev","filter","addTodoItem","newTodo","uuidv4","updatedTitle","state","temp","localStorage","getItem","loadedTodos","JSON","parse","this","prevProps","stringify","setItem","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a62968d1.chunk.js","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable no-use-before-define */\n/* eslint-disable prefer-const */\n/* eslint-disable react/forbid-prop-types */\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaTrash } from 'react-icons/fa';\nimport styles from './TodoItem.module.css';\n\nconst TodoItem = (props) => {\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => () => {\n    console.log('Cleaning up...');\n  }, []);\n\n  const {\n    todo, handleChangeProps, deleteTodoProps, setUpdate,\n  } = props;\n  const { title, completed, id } = todo;\n\n  const handleEditing = () => {\n    setEditing((current) => !current);\n  };\n\n  const completedStyle = {\n    fontStyle: 'italic',\n    color: '#595959',\n    opacity: 0.4,\n    textDecoration: 'line-through',\n  };\n\n  let viewMode = {};\n  let editMode = {};\n\n  if (editing) {\n    viewMode.display = 'none';\n  } else {\n    editMode.display = 'none';\n  }\n\n  const handleUpdatedDone = (e) => {\n    if (e.key === 'Enter') {\n      setEditing((current) => !current);\n    }\n  };\n\n  return (\n    <>\n      <li className={styles.item}>\n        <div onDoubleClick={handleEditing} style={viewMode}>\n          <input type=\"checkbox\" className={styles.checkbox} checked={completed} onChange={() => handleChangeProps(id)} />\n          <button type=\"button\" onClick={() => deleteTodoProps(id)}>\n            <FaTrash style={{ color: 'orangered', fontSize: '16px' }} />\n          </button>\n          <span style={completed ? completedStyle : null}>\n            { title }\n          </span>\n        </div>\n        <input\n          type=\"text\"\n          className={styles.textInput}\n          style={editMode}\n          value={title}\n          onChange={(e) => {\n            setUpdate(e.target.value, id);\n          }}\n          onKeyDown={handleUpdatedDone}\n        />\n      </li>\n    </>\n  );\n};\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  setUpdate: PropTypes.func.isRequired,\n  deleteTodoProps: PropTypes.func.isRequired,\n  handleChangeProps: PropTypes.func.isRequired,\n  todo: PropTypes.object.isRequired,\n};\n","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport TodoItem from './TodoItem';\n\nconst TodosList = (props) => {\n  const {\n    todos, handleChangeProps, deleteTodoProps, setUpdate,\n  } = props;\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={handleChangeProps}\n          deleteTodoProps={deleteTodoProps}\n          setUpdate={setUpdate}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodosList;\n","import React from 'react';\n\nconst Header = () => {\n  const headerStyle = {\n    padding: '20px 0',\n    lineHeight: '1.5em',\n  };\n\n  return (\n    <>\n      <header style={headerStyle}>\n        <h1 style={{\n          fontSize: '6rem',\n          fontWeight: '600',\n          marginBottom: '2rem',\n          lineHeight: '1em',\n          color: '#ececec',\n          textTransform: 'lowercase',\n          textAlign: 'center',\n        }}\n        >\n          todos\n        </h1>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","/* eslint-disable no-alert */\n/* eslint-disable react/destructuring-assignment */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { FaPlusCircle } from 'react-icons/fa';\n\nconst InputTodo = (props) => {\n  const [inputText, setInputText] = useState({\n    title: '',\n  });\n\n  const onChange = (e) => {\n    setInputText({\n      ...inputText,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (inputText.title.trim()) {\n      props.addTodoProps(inputText.title);\n      setInputText({\n        title: '',\n      });\n    } else {\n      alert('Please write item ...');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form-container\">\n      <input type=\"text\" placeholder=\"Add Todo...\" value={inputText.title} onChange={onChange} name=\"title\" className=\"input-text\" />\n      <button type=\"button\" className=\"input-submit\">\n        {' '}\n        <FaPlusCircle style={{ color: 'darkcyan', fontSize: '1.5rem', textAlign: 'center' }} />\n      </button>\n    </form>\n  );\n};\nexport default InputTodo;\n\nInputTodo.propTypes = {\n  addTodoProps: PropTypes.func.isRequired,\n};\n","/* eslint-disable react/destructuring-assignment */\n/* eslint-disable no-param-reassign */\nimport React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport TodosList from './TodosList';\nimport Header from './Header';\nimport InputTodo from './InputTodo';\n\nclass TodoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n    };\n  }\n\n  componentDidMount() {\n    const temp = localStorage.getItem('todos');\n    const loadedTodos = JSON.parse(temp);\n    if (loadedTodos) {\n      this.setState({\n        todos: loadedTodos,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.todos !== this.state.todos) {\n      const temp = JSON.stringify(this.state.todos);\n      localStorage.setItem('todos', temp);\n    }\n  }\n\n  handleChange = (id) => {\n    this.setState((prevState) => ({\n      todos: prevState.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      }),\n    }));\n  };\n\n  delTodo = (id) => {\n    this.setState((prev) => ({\n      todos: [...prev.todos.filter((todo) => todo.id !== id)],\n    }));\n  };\n\naddTodoItem = (title) => {\n  const newTodo = {\n    id: uuidv4(),\n    title,\n    completed: false,\n  };\n  this.setState((prev) => ({\n    todos: [...prev.todos, newTodo],\n  }));\n};\n\nsetUpdate = (updatedTitle, id) => {\n  this.setState((prevState) => ({\n    todos: prevState.todos.map((todo) => {\n      if (todo.id === id) {\n        return {\n          ...todo,\n          title: updatedTitle,\n        };\n      }\n      return todo;\n    }),\n  }));\n}\n\nrender() {\n  const { todos } = this.state;\n  return (\n    <div className=\"container\">\n      <div className=\"inner\">\n        <Header />\n        <InputTodo addTodoProps={this.addTodoItem} />\n        <TodosList\n          todos={todos}\n          handleChangeProps={this.handleChange}\n          deleteTodoProps={this.delTodo}\n          setUpdate={this.setUpdate}\n        />\n      </div>\n    </div>\n  );\n}\n}\nexport default TodoContainer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// component file\nimport TodoContainer from './components/TodoContainer';\nimport './App.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodoContainer />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TodoItem_item__2m_mS\",\"checkbox\":\"TodoItem_checkbox__16JVU\",\"textInput\":\"TodoItem_textInput__1Wkp2\"};"],"sourceRoot":""}